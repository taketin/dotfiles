################################################################################## 
# taketin's .tmux.conf                                                           #
#    __                                                                   ____   #
#   / /_   ____ ___     __  __   _  __         _____   ____     ____     / __/   #
#  / __/  / __ `__ \   / / / /  | |/_/        / ___/  / __ \   / __ \   / /_     #
# / /_   / / / / / /  / /_/ /  _>  <    _    / /__   / /_/ /  / / / /  / __/     #
# \__/  /_/ /_/ /_/   \__,_/  /_/|_|   (_)   \___/   \____/  /_/ /_/  /_/        #
#                                                                                #
##################################################################################


# taketin's .tmux.conf file
# Hidenori Takeshita <tksthdnr@gmail.com>

set-environment -gu RBENV_VERSION

# aliases
# set-window-option => setw
# set-option        => set
# bind-key          => bind
# unbind-key        => unbind

# unbind => default key
unbind C-b # => prefix
unbind %   # => split-window -h
unbind '"' # => split-window

# command prefix:
set -g prefix ^t

# http://d.hatena.ne.jp/koseki2/20110816/TmuxCopy
bind Y run-shell 'reattach-to-user-namespace tmux-pbcopy'

# global settings
set -g visual-bell on
set -g bell-action any
set -g history-limit 10000
setw -g automatic-rename off

# Powerline settings
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'
# run-shell "powerline-daemon -q"
# source "./Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf"

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/.ghq/github.com/erikw/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.ghq/github.com/erikw/tmux-powerline/powerline.sh right)"

# hack to get pbcopy and pbaste to work on OS X
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/
set-option -g default-command "reattach-to-user-namespace -l zsh"

# split keys
bind s split-window -v
bind v split-window -h

# move between panes using vi keys 'hjkl'
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes using vi keys 'hjkl'
bind -r C-h resize-pane -L 9
bind -r C-j resize-pane -D 7
bind -r C-k resize-pane -U 7
bind -r C-l resize-pane -R 9

# change layout, and swap from active pane to main pane
bind -r H select-layout main-vertical \; swap-pane -s : -t 0 \; select-pane -t 0 \; resize-pane -R 9
bind -r K select-layout main-horizontal \; swap-pane -s : -t 0 \; select-pane -t 0 \; resize-pane -D 18

# move between tmux sessions (tmux > 1.4)
bind N switch-client -n
bind P switch-client -p
bind L switch-client -l

# aliases for select-layout
bind | select-layout even-horizontal
bind _ select-layout even-vertical
bind S select-layout main-horizontal
bind V select-layout main-vertical
bind * select-layout tiled

# reassign ; from last-pane to last-window
# bind \; last-window

# new window with return
bind Enter new-window

# tmux-pbcopy script using
bind ^y run-shell 'tmux-pbcopy'

# enable 256 colors
set -g default-terminal "screen-256color"

# vi mode for shortcuts
setw -g mode-keys vi
set -g status-keys vi

# activity
setw -g monitor-activity on
set -g visual-activity on

# mouse input
set-option -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

# start window number from 1
set -g base-index 0

# extend message display time
set -g display-time 2000

# aggressively resize the chosen window
setw -g aggressive-resize on

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg colour235

# ウィンドウリストの色を設定する
setw -g window-status-fg cyan
setw -g window-status-bg black
setw -g window-status-attr dim

# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# ペインボーダーの色を設定する
set -g pane-border-fg yellow
set -g pane-border-bg black

# アクティブなペインを目立たせる
set -g pane-active-border-fg black
set -g pane-active-border-bg colour6

# コマンドラインの色を設定する
set -g message-fg white
set -g message-bg black
set -g message-attr bright

set -g display-panes-colour colour190

# compatible key bind with screen
bind C-[ copy-mode
bind C-c new-window
bind C-a last-window
bind C-n next-window
bind C-p previous-window
bind C-d detach-client
bind Q   break-pane

# like as vi while in copy-mode
set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"
bind-key    -T copy-mode-vi v     send-keys -X begin-selection
bind-key    -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key    -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind p paste-buffer

# reload tmux.conf
unbind r
bind   r source-file ~/.tmux.conf\; display-message "Reload Config..."

# mouse scroll
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-window-option -g mouse on

set -g @tpm_plugins " \
    tmux-plugins/tpm \
    tmux-plugins/tmux-copycat \
    tmux-plugins/tmux-open \
    tmux-plugins/tmux-resurrect \
    tmux-yank/tmux-yank \
    tmux-plugins/tmux-online-status \
"

# Logging
# ===== logging =====
#
# C-b C-p Start logging.
bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
# C-b C-o Stop logging
bind-key C-o pipe-pane \; display-message "Logging end."
# C-b v Open new window. Logging always. (-n is set window name.)
bind-key n new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

# Initialize tpm
run-shell ~/.tmux/plugins/tpm/tpm
